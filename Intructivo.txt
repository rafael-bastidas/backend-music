0. ESTRUCTURA DE LA BASE DE DATOS:
	list_favorite:
		{id_list_favorite: int, list_id_song: text, id_user: int}
	my_list:
      		{id_my_list: int, name: text, list_id_song: text, id_user: int}
	follow_list:
      		{id_follow_list: int, list_id_my_list: text, id_user: int}
	songs:
      		{id_songPrimaria: int, title: text, duration: text, album: text, group: text, url: text}
	users:
      		{id_user: int, user: text, password: text, email: text, name: text, bio: text, image: text}


Peticiones al backend:
url -> https://rafaelbastidas.com/apis/api-music/app.php
method -> POST
colocar en el header -> KEY_MUSIC: Z9AQBQXUWDHRN5GYE3DUG52BTSFT1NMA

***Recomendación enviar los datos por un elemento FormData.***

1. AUTENTICAR USUARIOS:
estructura de la peticion -> { url: 'contenido', params: 'autenticar', data: {"user":"rarabala", "password":"123"} }
respuesta del backend -> { "status": "ok | error", "respuesta": "Usuario no registrado | Contraseña incorrecta | id_user" }
  
  
2. REGISTRAR USUARIOS:
estructura de la peticion -> { url: 'contenido', params: 'registrar', data: {"user":"rarabala", "password":"123", "email":"rarabala@gmail.com", "name":"Rafael Bastidas", "bio":"algo de ti"} }
respuesta del backend -> { "status": "ok | error", "respuesta": "El usuario ya se encuentra registrado | id_user" }


3. OBTENER TODA LA INFORMACIÓN DE UN USURIO:
estructura de la peticion -> { url: 'contenido', params: 'get-init', data: {"id_user":"1"} }
respuesta del backend -> {
    "response": {
        "profile": [ { "id_user": "1", "name": "Rafael Bastidas", "bio": "algo de ti", "image": "" } ],
        "favorite_list": [
            {
                 "id_song": "1",
                 "title": "Señora de las cuatro decadas",
                 "duration": "3:45",
                 "album": "Lo mejor del 2020",
                 "group": "Ricardo Arjona",
                 "url": ""
            }, ...
        ],
        "my_list": [
            {
                "id_my_list": "1",
                "name": "lista one user 1",
                "list_id_song": [
                    {
                        "id_song": "1",
                        "title": "Señora de las cuatro decadas",
                        "duration": "3:45",
                        "album": "Lo mejor del 2020",
                        "group": "Ricardo Arjona",
                        "url": ""
                    }, ...
                ]
            }, ...
        ],
        "other_list": [
            {
                "id_my_list": "3",
                "name": "lista one user 3",
                "list_id_song": [
                    {
                        "id_song": "1",
                        "title": "Señora de las cuatro decadas",
                        "duration": "3:45",
                        "album": "Lo mejor del 2020",
                        "group": "Ricardo Arjona",
                        "url": ""
                    }, ...
                ]
            }, ...
        ],
        "all_songs": [
            {
                "id_song": "1",
                "title": "Señora de las cuatro decadas",
                "duration": "3:45",
                "album": "Lo mejor del 2020",
                "group": "Ricardo Arjona",
                "url": ""
            }, ...
        ],
        "all_list": [
            {
                "id_my_list": "1",
                "id_user": "1",
                "name": "lista one user 1",
                "list_id_song": [
                    {
                        "id_song": "1",
                        "title": "Señora de las cuatro decadas",
                        "duration": "3:45",
                        "album": "Lo mejor del 2020",
                        "group": "Ricardo Arjona",
                        "url": ""
                    }, ...
                ]
            }, ...
        ]
    }
}


4. FILTRAR LA INFORMACIÖN DE LAS CANCIONES O LISTAS:
estructura de la peticion -> { url: 'contenido', params: 'get-filter', data: {"title":string} | {"album":string} | {"group":string} | {"name":string} }
respuesta del backend para data: {"title":string} | {"album":string} | {"group":string}  -> {
    "response": [
        {
            "id_song": "2",
            "title": "Bandolero",
            "duration": "2:56",
            "album": "Los gorgolas",
            "group": "Don Omar",
            "url": "https://rafaelbastidas.com/apis/api-music/media/2021-12-03_23:20:45.wav"
        }...
    ]
}

respuesta del backend para data: {"name":string}
{
    "response": [
        {
            "id_my_list": "3",
            "id_user": "3",
            "name": "MyFirstList",
            "list_id_song": [
                {
                    "id_song": "1",
                    "title": "Señora de las cuatro decadas",
                    "duration": "3:45",
                    "album": "Lo mejor del 2020",
                    "group": "Ricardo Arjona",
                    "url": "https://rafaelbastidas.com/apis/api-music/media/2021-12-03_23:20:45.wav"
                }
            ]
        }...
    ]
}


5. AGREGAR CANCIONES A LA LISTA DE FAVORITO:
estructura de la peticion -> { url: 'contenido', params: 'get-filter', data: {"title":string} | {"album":string} | {"group":string} | {"name":string} }
respuesta del backend para data: {"title":string} | {"album":string} | {"group":string}  -> {


6. AGREGAR CANCIONES A UNA LISTA CREADA POR EL USUARIO:
estructura de la peticion -> { url: 'contenido', params: 'get-filter', data: {"title":string} | {"album":string} | {"group":string} | {"name":string} }
respuesta del backend para data: {"title":string} | {"album":string} | {"group":string}  -> {


7. SEGUIR LISTAS CREADAS POR OTROS USUARIOS:
estructura de la peticion -> { url: 'contenido', params: 'get-filter', data: {"title":string} | {"album":string} | {"group":string} | {"name":string} }
respuesta del backend para data: {"title":string} | {"album":string} | {"group":string}  -> {


8. CREAR LISTAS PROPIAS:
estructura de la peticion -> { url: 'contenido', params: 'get-filter', data: {"title":string} | {"album":string} | {"group":string} | {"name":string} }
respuesta del backend para data: {"title":string} | {"album":string} | {"group":string}  -> {


9. ELIMINAR CANCIONES DE LA LISTA DE FAVORITOS:
estructura de la peticion -> { url: 'contenido', params: 'get-filter', data: {"title":string} | {"album":string} | {"group":string} | {"name":string} }
respuesta del backend para data: {"title":string} | {"album":string} | {"group":string}  -> {


10. ELIMINAR CANCIONES DE LISTAS CREADAS POR EL USUARIO:
estructura de la peticion -> { url: 'contenido', params: 'get-filter', data: {"title":string} | {"album":string} | {"group":string} | {"name":string} }
respuesta del backend para data: {"title":string} | {"album":string} | {"group":string}  -> {


11. DEJAR DE SEGUIR LISTAS DE TERCEROS:
estructura de la peticion -> { url: 'contenido', params: 'get-filter', data: {"title":string} | {"album":string} | {"group":string} | {"name":string} }
respuesta del backend para data: {"title":string} | {"album":string} | {"group":string}  -> {


12. EDITAR LA INFORMACION DE UN USUARIO:
estructura de la peticion -> { url: 'contenido', params: 'get-filter', data: {"title":string} | {"album":string} | {"group":string} | {"name":string} }
respuesta del backend para data: {"title":string} | {"album":string} | {"group":string}  -> {


// ESTO PARA EL USUARIO ADMINISTRADOR //
13. SUBIR CANCIONES:
estructura de la peticion -> { url: 'contenido', params: 'get-filter', data: {"title":string} | {"album":string} | {"group":string} | {"name":string} }
respuesta del backend para data: {"title":string} | {"album":string} | {"group":string}  -> {


14. EDITAR INFORMACION DE LAS CANCIONES:
estructura de la peticion -> { url: 'contenido', params: 'get-filter', data: {"title":string} | {"album":string} | {"group":string} | {"name":string} }
respuesta del backend para data: {"title":string} | {"album":string} | {"group":string}  -> {


15. ELIMINAR CANCIONES:
estructura de la peticion -> { url: 'contenido', params: 'get-filter', data: {"title":string} | {"album":string} | {"group":string} | {"name":string} }
respuesta del backend para data: {"title":string} | {"album":string} | {"group":string}  -> {
